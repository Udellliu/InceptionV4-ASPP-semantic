InceptionV4(
  (stems): Sequential(
    (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2))
    (1): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
    (2): ReLU(inplace=True)
    (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1))
    (4): BatchNorm2d(32, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
    (5): ReLU(inplace=True)
    (6): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
    (8): ReLU(inplace=True)
    (9): Mixed_3a(
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
      (conv): Sequential(
        (0): Conv2d(64, 96, kernel_size=(3, 3), stride=(2, 2))
        (1): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
    )
    (10): Mixed_4a(
      (branch0): Sequential(
        (0): Conv2d(160, 64, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1))
        (4): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
      (branch1): Sequential(
        (0): Conv2d(160, 64, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 64, kernel_size=(7, 1), stride=(1, 1), padding=(0, 3))
        (4): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(64, 64, kernel_size=(1, 7), stride=(1, 1), padding=(3, 0))
        (7): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
        (9): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1))
        (10): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (11): ReLU(inplace=True)
      )
    )
    (11): Mixed_5a(
      (conv): Sequential(
        (0): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2))
        (1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
  )
  (aspp1): Sequential(
    (0): ASPP1(
      (mean): AdaptiveAvgPool2d(output_size=(1, 1))
      (conv): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1))
      (atrous_block1): Conv2d(384, 256, kernel_size=(1, 1), stride=(1, 1))
      (atrous_block6): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6))
      (atrous_block12): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12))
      (atrous_block18): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(18, 18), dilation=(18, 18))
      (conv_1x1_output): Conv2d(1280, 256, kernel_size=(1, 1), stride=(1, 1))
      (endpool): MaxPool2d(kernel_size=4, stride=1, padding=0, dilation=1, ceil_mode=False)
    )
  )
  (inceptionA): Sequential(
    (0): Inception_A(
      (branch0): Sequential(
        (0): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1): Sequential(
        (0): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
      (branch2): Sequential(
        (0): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
      )
      (branch3): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
      )
    )
    (1): Inception_A(
      (branch0): Sequential(
        (0): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1): Sequential(
        (0): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
      (branch2): Sequential(
        (0): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
      )
      (branch3): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
      )
    )
    (2): Inception_A(
      (branch0): Sequential(
        (0): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1): Sequential(
        (0): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
      (branch2): Sequential(
        (0): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
      )
      (branch3): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
      )
    )
    (3): Inception_A(
      (branch0): Sequential(
        (0): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1): Sequential(
        (0): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
      (branch2): Sequential(
        (0): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
      )
      (branch3): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
      )
    )
    (4): Reduction_A(
      (branch0): Sequential(
        (0): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2))
        (1): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1): Sequential(
        (0): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 224, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(224, 256, kernel_size=(3, 3), stride=(2, 2))
        (7): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
      )
      (branch2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
  )
  (center): Sequential(
    (0): Inception_A(
      (branch0): Sequential(
        (0): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1): Sequential(
        (0): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
      (branch2): Sequential(
        (0): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
      )
      (branch3): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
      )
    )
    (1): Inception_A(
      (branch0): Sequential(
        (0): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1): Sequential(
        (0): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
      (branch2): Sequential(
        (0): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
      )
      (branch3): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
      )
    )
    (2): Inception_A(
      (branch0): Sequential(
        (0): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1): Sequential(
        (0): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
      (branch2): Sequential(
        (0): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
      )
      (branch3): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
      )
    )
    (3): Inception_A(
      (branch0): Sequential(
        (0): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1): Sequential(
        (0): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
      (branch2): Sequential(
        (0): Conv2d(384, 64, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(64, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(64, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (7): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
      )
      (branch3): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): Conv2d(384, 96, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(96, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
      )
    )
    (4): Reduction_A(
      (branch0): Sequential(
        (0): Conv2d(384, 384, kernel_size=(3, 3), stride=(2, 2))
        (1): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1): Sequential(
        (0): Conv2d(384, 192, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 224, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (4): BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(224, 256, kernel_size=(3, 3), stride=(2, 2))
        (7): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
      )
      (branch2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
    (5): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (aspp2): ASPP2(
    (mean): AdaptiveAvgPool2d(output_size=(1, 1))
    (conv): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1))
    (atrous_block1): Conv2d(1024, 512, kernel_size=(1, 1), stride=(1, 1))
    (atrous_block6): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(6, 6), dilation=(6, 6))
    (atrous_block12): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1), padding=(12, 12), dilation=(12, 12))
    (conv_1x1_output): Conv2d(2048, 512, kernel_size=(1, 1), stride=(1, 1))
    (endpool): MaxPool2d(kernel_size=2, stride=1, padding=0, dilation=1, ceil_mode=False)
  )
  (inceptionB): Sequential(
    (0): Inception_B(
      (branch0): Sequential(
        (0): Conv2d(1024, 384, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1): Sequential(
        (0): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 224, kernel_size=(7, 1), stride=(1, 1), padding=(0, 3))
        (4): BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(224, 256, kernel_size=(1, 7), stride=(1, 1), padding=(3, 0))
        (7): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
      )
      (branch2): Sequential(
        (0): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 192, kernel_size=(1, 7), stride=(1, 1), padding=(3, 0))
        (4): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(192, 224, kernel_size=(7, 1), stride=(1, 1), padding=(0, 3))
        (7): BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
        (9): Conv2d(224, 224, kernel_size=(1, 7), stride=(1, 1), padding=(3, 0))
        (10): BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (11): ReLU(inplace=True)
        (12): Conv2d(224, 256, kernel_size=(7, 1), stride=(1, 1), padding=(0, 3))
        (13): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (14): ReLU(inplace=True)
      )
      (branch3): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
      )
    )
    (1): Inception_B(
      (branch0): Sequential(
        (0): Conv2d(1024, 384, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1): Sequential(
        (0): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 224, kernel_size=(7, 1), stride=(1, 1), padding=(0, 3))
        (4): BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(224, 256, kernel_size=(1, 7), stride=(1, 1), padding=(3, 0))
        (7): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
      )
      (branch2): Sequential(
        (0): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 192, kernel_size=(1, 7), stride=(1, 1), padding=(3, 0))
        (4): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(192, 224, kernel_size=(7, 1), stride=(1, 1), padding=(0, 3))
        (7): BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
        (9): Conv2d(224, 224, kernel_size=(1, 7), stride=(1, 1), padding=(3, 0))
        (10): BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (11): ReLU(inplace=True)
        (12): Conv2d(224, 256, kernel_size=(7, 1), stride=(1, 1), padding=(0, 3))
        (13): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (14): ReLU(inplace=True)
      )
      (branch3): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
      )
    )
    (2): Inception_B(
      (branch0): Sequential(
        (0): Conv2d(1024, 384, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1): Sequential(
        (0): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 224, kernel_size=(7, 1), stride=(1, 1), padding=(0, 3))
        (4): BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(224, 256, kernel_size=(1, 7), stride=(1, 1), padding=(3, 0))
        (7): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
      )
      (branch2): Sequential(
        (0): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 192, kernel_size=(1, 7), stride=(1, 1), padding=(3, 0))
        (4): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(192, 224, kernel_size=(7, 1), stride=(1, 1), padding=(0, 3))
        (7): BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
        (9): Conv2d(224, 224, kernel_size=(1, 7), stride=(1, 1), padding=(3, 0))
        (10): BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (11): ReLU(inplace=True)
        (12): Conv2d(224, 256, kernel_size=(7, 1), stride=(1, 1), padding=(0, 3))
        (13): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (14): ReLU(inplace=True)
      )
      (branch3): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
      )
    )
    (3): Inception_B(
      (branch0): Sequential(
        (0): Conv2d(1024, 384, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1): Sequential(
        (0): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 224, kernel_size=(7, 1), stride=(1, 1), padding=(0, 3))
        (4): BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(224, 256, kernel_size=(1, 7), stride=(1, 1), padding=(3, 0))
        (7): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
      )
      (branch2): Sequential(
        (0): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 192, kernel_size=(1, 7), stride=(1, 1), padding=(3, 0))
        (4): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(192, 224, kernel_size=(7, 1), stride=(1, 1), padding=(0, 3))
        (7): BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
        (9): Conv2d(224, 224, kernel_size=(1, 7), stride=(1, 1), padding=(3, 0))
        (10): BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (11): ReLU(inplace=True)
        (12): Conv2d(224, 256, kernel_size=(7, 1), stride=(1, 1), padding=(0, 3))
        (13): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (14): ReLU(inplace=True)
      )
      (branch3): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
      )
    )
    (4): Inception_B(
      (branch0): Sequential(
        (0): Conv2d(1024, 384, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1): Sequential(
        (0): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 224, kernel_size=(7, 1), stride=(1, 1), padding=(0, 3))
        (4): BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(224, 256, kernel_size=(1, 7), stride=(1, 1), padding=(3, 0))
        (7): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
      )
      (branch2): Sequential(
        (0): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 192, kernel_size=(1, 7), stride=(1, 1), padding=(3, 0))
        (4): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(192, 224, kernel_size=(7, 1), stride=(1, 1), padding=(0, 3))
        (7): BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
        (9): Conv2d(224, 224, kernel_size=(1, 7), stride=(1, 1), padding=(3, 0))
        (10): BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (11): ReLU(inplace=True)
        (12): Conv2d(224, 256, kernel_size=(7, 1), stride=(1, 1), padding=(0, 3))
        (13): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (14): ReLU(inplace=True)
      )
      (branch3): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
      )
    )
    (5): Inception_B(
      (branch0): Sequential(
        (0): Conv2d(1024, 384, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1): Sequential(
        (0): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 224, kernel_size=(7, 1), stride=(1, 1), padding=(0, 3))
        (4): BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(224, 256, kernel_size=(1, 7), stride=(1, 1), padding=(3, 0))
        (7): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
      )
      (branch2): Sequential(
        (0): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 192, kernel_size=(1, 7), stride=(1, 1), padding=(3, 0))
        (4): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(192, 224, kernel_size=(7, 1), stride=(1, 1), padding=(0, 3))
        (7): BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
        (9): Conv2d(224, 224, kernel_size=(1, 7), stride=(1, 1), padding=(3, 0))
        (10): BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (11): ReLU(inplace=True)
        (12): Conv2d(224, 256, kernel_size=(7, 1), stride=(1, 1), padding=(0, 3))
        (13): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (14): ReLU(inplace=True)
      )
      (branch3): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
      )
    )
    (6): Inception_B(
      (branch0): Sequential(
        (0): Conv2d(1024, 384, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1): Sequential(
        (0): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 224, kernel_size=(7, 1), stride=(1, 1), padding=(0, 3))
        (4): BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(224, 256, kernel_size=(1, 7), stride=(1, 1), padding=(3, 0))
        (7): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
      )
      (branch2): Sequential(
        (0): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 192, kernel_size=(1, 7), stride=(1, 1), padding=(3, 0))
        (4): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(192, 224, kernel_size=(7, 1), stride=(1, 1), padding=(0, 3))
        (7): BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
        (9): Conv2d(224, 224, kernel_size=(1, 7), stride=(1, 1), padding=(3, 0))
        (10): BatchNorm2d(224, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (11): ReLU(inplace=True)
        (12): Conv2d(224, 256, kernel_size=(7, 1), stride=(1, 1), padding=(0, 3))
        (13): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (14): ReLU(inplace=True)
      )
      (branch3): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): Conv2d(1024, 128, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(128, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
      )
    )
    (7): Reduction_B(
      (branch0): Sequential(
        (0): Conv2d(1024, 192, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(192, 192, kernel_size=(3, 3), stride=(2, 2))
        (4): BatchNorm2d(192, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
      )
      (branch1): Sequential(
        (0): Conv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
        (3): Conv2d(256, 256, kernel_size=(1, 7), stride=(1, 1), padding=(0, 3))
        (4): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (5): ReLU(inplace=True)
        (6): Conv2d(256, 320, kernel_size=(7, 1), stride=(1, 1), padding=(3, 0))
        (7): BatchNorm2d(320, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (8): ReLU(inplace=True)
        (9): Conv2d(320, 320, kernel_size=(3, 3), stride=(2, 2))
        (10): BatchNorm2d(320, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (11): ReLU(inplace=True)
      )
      (branch2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    )
  )
  (inceptionC): Sequential(
    (0): Inception_C(
      (branch0): Sequential(
        (0): Conv2d(1536, 256, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1_0): Sequential(
        (0): Conv2d(1536, 384, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1_1a): Sequential(
        (0): Conv2d(384, 256, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (1): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1_1b): Sequential(
        (0): Conv2d(384, 256, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (1): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch2_0): Sequential(
        (0): Conv2d(1536, 384, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch2_1): Sequential(
        (0): Conv2d(384, 448, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (1): BatchNorm2d(448, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch2_2): Sequential(
        (0): Conv2d(448, 512, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (1): BatchNorm2d(512, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch2_3a): Sequential(
        (0): Conv2d(512, 256, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (1): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch2_3b): Sequential(
        (0): Conv2d(512, 256, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (1): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch3): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): Conv2d(1536, 256, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
      )
    )
    (1): Inception_C(
      (branch0): Sequential(
        (0): Conv2d(1536, 256, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1_0): Sequential(
        (0): Conv2d(1536, 384, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1_1a): Sequential(
        (0): Conv2d(384, 256, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (1): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1_1b): Sequential(
        (0): Conv2d(384, 256, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (1): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch2_0): Sequential(
        (0): Conv2d(1536, 384, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch2_1): Sequential(
        (0): Conv2d(384, 448, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (1): BatchNorm2d(448, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch2_2): Sequential(
        (0): Conv2d(448, 512, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (1): BatchNorm2d(512, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch2_3a): Sequential(
        (0): Conv2d(512, 256, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (1): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch2_3b): Sequential(
        (0): Conv2d(512, 256, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (1): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch3): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): Conv2d(1536, 256, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
      )
    )
    (2): Inception_C(
      (branch0): Sequential(
        (0): Conv2d(1536, 256, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1_0): Sequential(
        (0): Conv2d(1536, 384, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1_1a): Sequential(
        (0): Conv2d(384, 256, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (1): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch1_1b): Sequential(
        (0): Conv2d(384, 256, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (1): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch2_0): Sequential(
        (0): Conv2d(1536, 384, kernel_size=(1, 1), stride=(1, 1))
        (1): BatchNorm2d(384, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch2_1): Sequential(
        (0): Conv2d(384, 448, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (1): BatchNorm2d(448, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch2_2): Sequential(
        (0): Conv2d(448, 512, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (1): BatchNorm2d(512, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch2_3a): Sequential(
        (0): Conv2d(512, 256, kernel_size=(1, 3), stride=(1, 1), padding=(0, 1))
        (1): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch2_3b): Sequential(
        (0): Conv2d(512, 256, kernel_size=(3, 1), stride=(1, 1), padding=(1, 0))
        (1): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (2): ReLU(inplace=True)
      )
      (branch3): Sequential(
        (0): AvgPool2d(kernel_size=3, stride=1, padding=1)
        (1): Conv2d(1536, 256, kernel_size=(1, 1), stride=(1, 1))
        (2): BatchNorm2d(256, eps=0.001, momentum=0.1, affine=True, track_running_stats=True)
        (3): ReLU(inplace=True)
      )
    )
  )
  (enc3): inception_Decoder(
    (encode): Sequential(
      (0): Upsample(scale_factor=2.0, mode=bilinear)
      (1): Conv2d(2560, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2))
      (2): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): ReLU(inplace=True)
      (4): Conv2d(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): BatchNorm2d(1280, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): ReLU(inplace=True)
      (7): Conv2d(1280, 1024, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (8): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (9): ReLU(inplace=True)
    )
  )
  (enc2): inception_Decoder(
    (encode): Sequential(
      (0): Upsample(scale_factor=2.0, mode=bilinear)
      (1): Conv2d(1536, 768, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2))
      (2): BatchNorm2d(768, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): ReLU(inplace=True)
      (4): Conv2d(768, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): ReLU(inplace=True)
    )
  )
  (enc2_1): inception_Decoder(
    (encode): Sequential(
      (0): Upsample(scale_factor=2.0, mode=bilinear)
      (1): Conv2d(768, 384, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2))
      (2): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): ReLU(inplace=True)
      (4): Conv2d(384, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): BatchNorm2d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): ReLU(inplace=True)
    )
  )
  (enc1): Sequential(
    (0): Upsample(scale_factor=2.0, mode=bilinear)
    (1): Conv2d(384, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (3): ReLU(inplace=True)
  )
  (final): Conv2d(64, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
)